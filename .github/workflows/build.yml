name: CI
on:
  push:
    branches: ["**"]
    paths-ignore: ["docs/**", "**/*.md"]
  pull_request:
    paths-ignore: ["docs/**", "**/*.md"]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ping:
    name: ping • ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - run: echo "ok"

  py:
    name: "py / ${{ matrix.python }} • ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11", "3.12"]
        os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: Preflight
        run: python -V && pip -V
      - name: Install (best-effort)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "no requirements.txt"
          fi
      - name: Lint/Test smoke (best-effort)
        run: |
          python -c "print('python ok')"
          if command -v pytest >/dev/null 2>&1; then pytest -q || true; else echo "pytest not installed"; fi

  ts:
    if: ${{ hashFiles('**/package.json') != '' }}
    name: "ts / node 22.x • ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm
      - name: Install (best-effort)
        run: |
          corepack enable || true
          if [ -f pnpm-lock.yaml ]; then pnpm i --frozen-lockfile; else echo "no pnpm lock"; fi
      - name: Test smoke (best-effort)
        run: pnpm -s test || echo "no tests"
