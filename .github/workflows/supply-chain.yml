name: supply-chain
on:
  schedule:
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  sbom:
    name: Generate SBOMs
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: SBOM (CycloneDX JSON)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: cyclonedx-json
          artifact-name: sbom.cdx.json
          output-file: sbom.json

  radar:
    name: Weekly gates
    runs-on: ubuntu-latest
    needs: sbom
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Python gates
        if: hashFiles('pyproject.toml') != ''
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry
          poetry install --no-interaction
          poetry run ruff check .
          poetry run black --check .
          PYTHONPATH=src poetry run pytest -q
          poetry run mypy .
      - name: Node/TS gates
        if: hashFiles('package.json') != ''
        run: |
          corepack enable
          if [ -f pnpm-lock.yaml ]; then pnpm install --frozen-lockfile; elif [ -f package-lock.json ]; then npm ci; else npm install --no-audit --no-fund; fi
          npx --yes prettier -c .
          npx --yes eslint --max-warnings=0 .
          if [ -f tsconfig.json ]; then npx --yes tsc --noEmit -p tsconfig.json; fi
          npm test --silent || npm run test --silent || true
