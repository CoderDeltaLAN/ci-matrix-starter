name: ts-ci (reusable)
on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: "20"
    secrets:
      COSIGN_KEY:
        required: false
      COSIGN_PASSWORD:
        required: false

jobs:
  ts:
    name: Node ${{ inputs.node-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm
      - name: Install deps
        run: npm ci
      - name: Lint & Format
        run: npx prettier --check . && npx eslint . --max-warnings=0
      - name: Type check
        run: |
          if [ -f tsconfig.json ]; then npx tsc --noEmit; else echo "no tsconfig.json"; fi
      - name: Tests + coverage
        run: |
          if npm run -s test --dry-run >/dev/null 2>&1; then
            npm test -- --coverage --coverageReporters=text --coverageReporters=json-summary;
          else
            echo "no tests";
          fi
      - name: SBOM (CycloneDX)
        run: |
          npx @cyclonedx/cyclonedx-npm --output-file sbom-node.json || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: node-artifacts
          path: |
            coverage/coverage-summary.json
            sbom-node.json
  sign:
    if: ${{ always() && secrets.COSIGN_KEY != '' }}
    needs: [ts]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install cosign
        run: |
          COSIGN_VERSION="v2.4.0"
          curl -sSfL "https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64" -o cosign
          chmod +x cosign
      - name: Sign SBOM (attestation)
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          [ -f sbom-node.json ] && ./cosign sign-blob --key env://COSIGN_KEY sbom-node.json || true
