name: py-ci (reusable)
on:
  workflow_call:
    inputs:
      python-versions:
        type: string
        required: false
        default: '["3.11","3.12"]'

jobs:
  py:
    name: Python ${{ matrix.py }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: ${{ fromJson(inputs.python-versions) }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect Python project
        id: detect
        run: |
          if [ -f pyproject.toml ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
            echo "No pyproject.toml â€” skipping Python checks."
          fi

      - uses: actions/setup-python@v5
        if: steps.detect.outputs.present == 'true'
        with:
          python-version: ${{ matrix.py }}

      - name: Install Poetry
        if: steps.detect.outputs.present == 'true'
        run: pipx install poetry

      - name: Install deps
        if: steps.detect.outputs.present == 'true'
        run: poetry install --only main,test --no-interaction

      - name: Ruff
        if: steps.detect.outputs.present == 'true'
        run: poetry run ruff check .

      - name: Black
        if: steps.detect.outputs.present == 'true'
        run: poetry run black --check src tests

      - name: Tests
        if: steps.detect.outputs.present == 'true'
        run: PYTHONPATH=src poetry run pytest -q
