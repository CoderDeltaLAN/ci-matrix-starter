name: py-ci (reusable)
on:
  workflow_call:
    inputs:
      python-versions:
        required: false
        type: string
        default: '["3.11","3.12"]'
      cov-min:
        required: false
        type: number
        default: 100
jobs:
  py:
    name: Python ${{ matrix.py }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        py: ${{ fromJson(inputs.python-versions) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install poetry
          poetry install --no-interaction
      - name: Lint & Format
        run: |
          poetry run ruff check .
          poetry run black --check .
      - name: Type check
        run: poetry run mypy src
      - name: Tests + coverage
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -q --cov=src --cov-report=xml:coverage.xml --cov-fail-under=${{ inputs.cov-min }}
      - name: SBOM (CycloneDX)
        run: |
          python -m pip install cyclonedx-bom || pip install cyclonedx-bom
          cyclonedx-py -o sbom-python-${{ matrix.py }}.xml || cyclonedx-bom -o sbom-python-${{ matrix.py }}.xml || true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: py-${{ matrix.py }}-artifacts
          path: |
            coverage.xml
            sbom-python-${{ matrix.py }}.xml
          if-no-files-found: ignore
